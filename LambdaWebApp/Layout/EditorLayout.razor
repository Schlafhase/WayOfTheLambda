@using LambdaWebApp.Components.Menu
@using LambdaWebApp.Components.Editor
@using LambdaWebApp.Components
@inherits LayoutComponentBase

<MenuRow>
    <MenuCategory Name="File">
        <MenuButton Name="Export diagram as JSON" OnClickAsync="downloadDiagramJson"/>
        <MenuButton Name="Export diagram as PNG" OnClickAsync="downloadDiagramBitmap"/>
        <MenuButton Name="Export diagram as PNG (HD)" OnClickAsync="downloadDiagramHD"/>
    </MenuCategory>
    @* <MenuCategory Name="Preferences"></MenuCategory> *@
    <MenuCategory Name="Contribute">
        <MenuLink Name="GitHub" Href="https://github.com/Schlafhase/WayOfTheLambda"/>
    </MenuCategory>
</MenuRow>

<div id="content">
    <HorizontalDynamicLayout>
        <LayoutItem>
            <TextEditor @ref="_textEditor"></TextEditor>
        </LayoutItem>
        <LayoutItem>
            <VerticalDynamicLayout>
                <LayoutItem>
                    <BetaReductionView @ref="_betaReductionView"></BetaReductionView>
                </LayoutItem>
                <LayoutItem>
                    <h2 id="diagram-header">Diagram</h2>
                    <DiagramView @ref="_diagramView" CameraX="100" CameraY="100"></DiagramView>
                </LayoutItem>
            </VerticalDynamicLayout>
        </LayoutItem>
    </HorizontalDynamicLayout>
</div>

<script>
  window.downloadFileFromStream = async (fileName, contentStreamReference) => {
    const arrayBuffer = await contentStreamReference.arrayBuffer();
    const blob = new Blob([arrayBuffer]);
    const url = URL.createObjectURL(blob);
    const anchorElement = document.createElement('a');
    anchorElement.href = url;
    anchorElement.download = fileName ?? '';
    anchorElement.click();
    anchorElement.remove();
    URL.revokeObjectURL(url);
  }
</script>